<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
     <meta charset="utf-8" />
    <title>Knockout: Computed (with grand totals)</title>
    <link href="css/fonts.css" rel="stylesheet" type="text/css" />
    <link href="css/styles.css" rel="stylesheet" type="text/css" />
    <script src="Scripts/knockout-2.2.1.debug.js" type="text/javascript"></script>
    <script src="Scripts/jquery-1.9.0.min.js" type="text/javascript"></script>
    <script src="Customer Scripts/data.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            var photoPath = "images/";

            //function helper
            my.formatCurrency = function (value) {
                return "$" + value.toFixed(2);
            };

            //for creating model
            my.Product = function () {
                this.id = ko.observable();
                this.salePrice = ko.observable();
                this.photo = ko.observable();
                this.shortDescription = ko.observable();
                this.photoUrl = ko.computed(function () {
                    return photoPath + this.photo();
                }, this);
            };

            //for creating lineitem objects
            my.LineItem = function() {
                var self = this;
                self.product = ko.observable();
                self.quantity = ko.observable(1);
                self.extendedPrice = ko.computed(function () {
                    return self.product() ? self.product().salePrice() *  parseInt("0" + self.quantity(), 10) : 0;
                });
            };


            //view model
            my.vm = {
                metadata: {
                    pageTitle : "Kncockout: computed with grand totals",
                    personal: {
                        link: "http://in.linkedin.com/in/muruganamirthavel",
                        text: "@muggy"
                    }
                },
                products: ko.observableArray([]),
                lines:ko.observableArray([new my.LineItem()]),
                
                addLine: function () {
                    my.vm.lines.push(new my.LineItem());
                },
                removeLine: function (line) {
                    my.vm.lines.remove(line);
                },
                
                loadProducts:function () {
                    $.each(my.sampleData.data.Products, function(i, p) {
                        my.vm.products.push(new my.Product()
                                .id(p.Id)
                                .salePrice(p.SalePrice)
                                .photo(p.Photo)
                                .shortDescription(p.Model.Name)
                        );
                    });
                }
            };
            
            //computed observable function
            //we append it to the view model here

            my.vm.grandTotal = ko.computed(function() {
                var total = 0;
                $.each(this.lines(), function() {
                    total += this.extendedPrice();
                });
                return total;
            }, my.vm);

            my.vm.loadProducts();
            ko.applyBindings(my.vm);
        });
    </script>
</head>
<body>
    <div class="page">
        <div class="header" data-bind="with: metadata">
            <h1 data-bind="text: pageTitle">
            </h1>
            <div data-bind="with:personal">
                <a href="Home.htm">Home</a> <a data-bind="attr: {href: link, title: text}, text: text"
                                                     class="personalCss"></a>
            </div>
        </div>
        <div id="main">
            <div class="showroom">
                <div>
                    <table>
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Ext.Price</th>
                            </tr>
                        </thead>
                        <tbody data-bind='foreach: lines'>
                            <tr>
                                <td style="width: 25px;">
                                    <select data-bind="options:$parent.products, value:product, optionsText: 'shortDescription', optionsCaption:'Select a product ...'">
                                    </select>
                                </td>
                                <td data-bind="if: product" style="width: 100px;">
                                    <span data-bind='text: my.formatCurrency(product().salePrice())'></span>
                                </td>
                                <td style="width: 100px;">
                                    <input data-bind='visible: product, value: quantity, valueUpdate: "afterkeydown"' class="integerInput"/>
                                </td>
                                <td style="width: 100px;">
                                    <span data-bind='visible: product, text: my.formatCurrency(extendedPrice())'></span>
                                </td>
                                <td style="width: 100px;">
                                    <a href='#' data-bind='click: $parent.removeLine'>Remove</a>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <p>
                        Total value: <span data-bind='text: my.formatCurrency(grandTotal())'></span>
                    </p>
                    <button data-bind='click: addLine'>Add product</button>
                </div>
            </div>
        </div>
         <div class="topics">
        <span>Explores:</span>
        <ul>
            <li>observable</li>
            <li>computed (for the extended price)</li>
            <li>computed (for the grand total)</li>
            <li>click</li>
			<li>valueUpdate: 'afterkeydown'</li>
			<li>visible</li>
			<li>options</li>
			<li>optionsText</li>
			<li>selectedOptions</li>
			<li>if (quick glimpse)</li>
			<li>foreach (quick glimpse)</li>
			<li>$parent (quick glimpse)</li>
            <li>observableArray (quick glimpse)</li>
        </ul>
    </div>
    </div>
</body>
</html>
